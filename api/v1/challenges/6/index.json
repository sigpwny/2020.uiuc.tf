{"success": true, "data": {"id": 6, "name": "Small Oops", "value": 200, "description": "Find something we didn't expect, DM it to us over ModMail, and you'll receive a flag for your hard work.\r\n\r\nThis exploit needs to be something that allows you to skip steps in the exploitation sequence (AKA jump straight from sandbox to root or something similar), read arbitrary kernel code, write anything into kernel memory (uncontrolled or controlled writes are fine), or execute arbitrary kernel code sequences. The kernel memory leak challenge does not count.\r\n\r\nFlags will be distributed according to the severity and uniqueness of each bug on a case-by-case basis. Admins reserve the right to refuse a flag for a bug that does not satisfy either of those above properties.\r\n\r\nOut of bounds for this challenge includes attacking the infrastructure (AKA configuring BIOS settings or attacking the VNC protocol).\r\n\r\nMax of 3 solves per team. If you find more than 3, DM us.\r\n\r\nLevels of \"Oops\":\r\n\r\nSmall Oops- Bypass a challenge by getting a flag without performing an exploit (200)\r\n\r\nMedium Oops- Privilege escalation from sandbox to user without solving crazy_caches (500)\r\n\r\nLarge Oops- Privilege escalation directly from sandbox to root (750)\r\n\r\nMega Oops- Arbitrary Kernel Code Execution or RW (1000)\r\n\r\nAsk for ravi when you message ModMail.", "category": "Kernel Exploitation", "state": "visible", "max_attempts": 0, "type": "standard", "type_data": {"id": "standard", "name": "standard", "templates": {"create": "/plugins/challenges/assets/create.html", "update": "/plugins/challenges/assets/update.html", "view": "/plugins/challenges/assets/view.html"}, "scripts": {"create": "/plugins/challenges/assets/create.js", "update": "/plugins/challenges/assets/update.js", "view": "/plugins/challenges/assets/view.js"}}, "solves": 6, "files": [], "tags": [], "hints": []}}
